name: AI Discord Greeting

on:
  schedule:
    - cron: '0 0 * * 1-5'    # 7 AM WIB weekdays (morning)
    - cron: '0 5 * * 1-5'    # 12 PM WIB weekdays (afternoon)
    - cron: '0 10 * * 1-5'   # 5 PM WIB weekdays (evening)
    - cron: '0 15 * * 1-5'   # 10 PM WIB weekdays (night)
    - cron: '0 0 * * 6,0'    # 7 AM WIB weekends (morning)
    - cron: '0 5 * * 6,0'    # 12 PM WIB weekends (afternoon)
    - cron: '0 10 * * 6,0'   # 5 PM WIB weekends (evening)
    - cron: '0 15 * * 6,0'   # 10 PM WIB weekends (night)
  workflow_dispatch:
    inputs:
      greeting_type:
        description: 'Select greeting type'
        required: true
        default: 'morning'
        type: choice
        options: [morning, afternoon, evening, night]

jobs:
  send-greeting:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Generate and Send AI Greeting
        run: |
          # Determine greeting type and context
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TYPE="${{ github.event.inputs.greeting_type }}"
          else
            case "${{ github.event.schedule }}" in
              "0 0 * * 1-5"|"0 0 * * 6,0") TYPE="morning" ;;
              "0 5 * * 1-5"|"0 5 * * 6,0") TYPE="afternoon" ;;
              "0 10 * * 1-5"|"0 10 * * 6,0") TYPE="evening" ;;
              "0 15 * * 1-5"|"0 15 * * 6,0") TYPE="night" ;;
            esac
          fi
          
          # Get current day and time info for AI (Indonesia timezone GMT+7)
          export TZ='Asia/Jakarta'
          CURRENT_DAY=$(TZ='Asia/Jakarta' date +%A)        # Full day name (Monday, Tuesday, etc.)
          CURRENT_DATE=$(TZ='Asia/Jakarta' date +"%B %d, %Y")  # Full date (August 22, 2025)
          CURRENT_TIME=$(TZ='Asia/Jakarta' date +"%H:%M")      # Current time (04:20)
          
          DAY=$(TZ='Asia/Jakarta' date +%u)
          if [[ $DAY -eq 6 || $DAY -eq 7 ]]; then
            CONTEXT="weekend"
          else
            CONTEXT="weekday"
          fi
          
          # Check for weekend transitions and next day info (Indonesia timezone)
          WEEKEND_TRANSITION=""
          NEXT_DAY_INFO=""
          if [[ "$TYPE" == "night" || "$TYPE" == "evening" ]]; then
            case $DAY in
              5) 
                WEEKEND_TRANSITION="weekend_starts"
                NEXT_DAY_INFO="besok weekend udah mulai coyyy / tomorrow weekend starts brooo"
                ;;
              6) 
                WEEKEND_TRANSITION="weekend_continues"
                NEXT_DAY_INFO="besok minggu masih weekend santuy / tomorrow sunday still weekend vibes"
                ;;
              7) 
                WEEKEND_TRANSITION="weekend_ends"
                NEXT_DAY_INFO="besok senin balik kerja deh / tomorrow monday back to work life"
                ;;
              1)
                NEXT_DAY_INFO="besok selasa masih semangat gais / tomorrow tuesday still motivated gang"
                ;;
              2)
                NEXT_DAY_INFO="besok rabu hump day energy / tomorrow wednesday halfway there"
                ;;
              3)
                NEXT_DAY_INFO="besok kamis almost weekend vibes / tomorrow thursday weekend preview"
                ;;
              4)
                NEXT_DAY_INFO="besok jumat weekend loading banget / tomorrow friday weekend incoming for real"
                ;;
            esac
          fi
          
          echo "🤖 Generating $TYPE greeting for $CONTEXT"
          echo "📅 Current day: $CURRENT_DAY ($CURRENT_DATE) - Indonesia time"
          echo "🕐 Current time: $CURRENT_TIME WIB (GMT+7)"
          if [[ -n "$WEEKEND_TRANSITION" ]]; then
            echo "📅 Weekend transition detected: $WEEKEND_TRANSITION"
          fi
          if [[ -n "$NEXT_DAY_INFO" ]]; then
            echo "📅 Next day info: $NEXT_DAY_INFO"
          fi
          
          # Create simple prompt without problematic characters
          cat > /tmp/prompt.txt << 'EOF'
          Create a casual Discord greeting for TIME_HERE on CONTEXT_HERE.
          
          CURRENT_DAY_INFO
          CURRENT_DATE_INFO  
          CURRENT_TIME_INFO (Indonesia timezone GMT+7 / WIB)
          WEEKEND_TRANSITION_INFO
          NEXT_DAY_INFO_TEXT
          
          Requirements:
          - IMPORTANT: Use the ACTUAL current day/time provided above (Indonesia timezone)
          - Start with English, end with Indonesian - must flow naturally (no hard cut)
          - Tone: chill, conversational, not try-hard; PG-13; no hashtags; no @everyone
          - Mix slang (use 2–3 max): brodie, fr, lowkey, anjir, dikit, gabut, cuy
          - Allow playful misspells (use 1–2 max): banngh, lowl, deym, dayumm, dangg, cuyy, brodiee, skuy, gais, santuy/santay, wkwwk/lmaoo
          - Gaming terms (use 1 max): mmr, noob, mabar, touching grass
          - Keep it conversational but substantial (2-3 lines, ≤25 words per line)
          - International Discord server vibe; avoid hyper-local references; readable for non-Indo members
          - Use exactly 1 emoji in TITLE only
          - Make TITLE creative and expressive (3-5 words), not just basic time labels
          - No hyphens or dashes in DESC; use commas or semicolons if needed
          - For evening/night greetings, include casual next-day mentions when provided
          - Make messages feel like genuine friend check-ins, not robotic announcements
          - Reference the correct day/time context provided above (Indonesia time zone)
          
          Good examples (don't copy the same, just improve it):
          morning gang lowkey warm up then hop vc lanjut mabar santuy cuyy
          what’s good team fr just chill here dulu kalo gabut mabar tipis banngh
          evening check in we touch grass a bit abis itu queue bareng brodiee
          late night lobby lowl still up or tidur dulu aja santay
          midday reset hydrate then hop back in lanjut grind mmr dikit cuy
          afterwork vibes deym breathe stretch terus join vc yuk
          sunday slow start take it easy dulu abis itu skuy mabar barengan
          sunrise ping coffee first or langsung queue yang noob santai aja ikut
          midweek energy focus a bit then break sebentar lanjut ngobrol gabut
          weekend mode we outside dulu terus balik ngepush dikit dayumm
          hello gamers lowkey hang here or slide to lobby yang mau mabar gaskeun
          good afternoon crew tune in vc or lurk aja dulu gais
          friday evening vibes dangg weekend loading for real, time to celebrate besok weekend udah mulai coyyy
          thursday night energy lowkey excited brodiee, besok jumat weekend loading banget almost there fam
          saturday evening santuy banget today, besok minggu masih weekend dayumm perfect timing for lazy mode
          evening squad deym what a day, besok weekend udah mulai coyyy weekend mode fully activated now
          morning gang lowkey warm up session dulu then hop vc, lanjut mabar santuy cuyy coffee hits different today
          afternoon crew hope everyone doing good, just vibing here dulu kalo gabut we can queue together banngh
          wednesday evening vibes brodie, almost hump day done terus besok kamis getting closer to weekend
          tuesday morning energy gais, hope everyone slept well dulu terus ready for another good day cuyy
          
          Creative title examples:
          🌅 Morning Vibes Loading
          🌅 Sunrise Squad Assemble
          ☀️ Midday Check In
          ☀️ Afternoon Feels Good
          🌆 Golden Hour Gang
          🌆 Evening Legends Unite
          🌙 Night Owls Territory
          🌙 Midnight Gaming Zone
          🌜 Late Night Chronicles
          
          Format:
          TITLE: [casual title with emoji]
          DESC: [short natural flow English-Indonesian mix; 1–2 lines max; no dashes]
          FOOTER: [short footer]
          
          Keep it natural and short!
          EOF
          
          # Replace placeholders
          sed -i "s/TIME_HERE/$TYPE/g" /tmp/prompt.txt
          sed -i "s/CONTEXT_HERE/$CONTEXT/g" /tmp/prompt.txt
          sed -i "s|NEXT_DAY_INFO_TEXT|$NEXT_DAY_INFO|g" /tmp/prompt.txt
          sed -i "s/CURRENT_DAY_INFO/Current day: $CURRENT_DAY (Indonesia timezone)/g" /tmp/prompt.txt
          sed -i "s/CURRENT_DATE_INFO/Current date: $CURRENT_DATE (WIB)/g" /tmp/prompt.txt
          sed -i "s/CURRENT_TIME_INFO/Current time: $CURRENT_TIME WIB/g" /tmp/prompt.txt
          
          # Try Gemini API
          echo "🔄 Calling Gemini API..."
          
          # Create JSON payload safely
          python3 << 'PYTHON_EOF'
          import json
          import requests
          import os
          import sys
          
          # Read prompt
          with open('/tmp/prompt.txt', 'r') as f:
              prompt = f.read().strip()
          
          # Prepare request
          api_key = os.environ.get('GEMINI_API_KEY')
          if not api_key:
              print("❌ No API key found")
              sys.exit(1)
          
          url = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key={api_key}"
          
          payload = {
              "contents": [{"parts": [{"text": prompt}]}],
              "generationConfig": {
                  "temperature": 0.8,
                  "maxOutputTokens": 300
              }
          }
          
          try:
              response = requests.post(url, json=payload, timeout=30)
              
              if response.status_code == 200:
                  data = response.json()
                  if 'candidates' in data and len(data['candidates']) > 0:
                      ai_text = data['candidates'][0]['content']['parts'][0]['text']
                      print("✅ AI response received")
                      with open('/tmp/ai_response.txt', 'w') as f:
                          f.write(ai_text)
                  else:
                      print("❌ No candidates in response")
                      with open('/tmp/ai_response.txt', 'w') as f:
                          f.write("")
              else:
                  print(f"❌ API error: {response.status_code}")
                  print(f"Response: {response.text}")
                  with open('/tmp/ai_response.txt', 'w') as f:
                      f.write("")
                      
          except Exception as e:
              print(f"❌ Request failed: {e}")
              with open('/tmp/ai_response.txt', 'w') as f:
                  f.write("")
          PYTHON_EOF
          
          # Parse AI response or use fallback
          if [[ -s /tmp/ai_response.txt ]]; then
            AI_TEXT=$(cat /tmp/ai_response.txt)
            echo "AI response preview: $(echo "$AI_TEXT" | head -c 100)..."
            echo "Full AI response:"
            echo "$AI_TEXT"
            echo "--- End AI response ---"
            
            # Extract parts - more flexible parsing
            TITLE=$(echo "$AI_TEXT" | grep -i "^TITLE:" | head -1 | sed 's/.*TITLE:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//' || echo "")
            DESC_RAW=$(echo "$AI_TEXT" | grep -i "^DESC:" | head -1 | sed 's/.*DESC:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//' || echo "")
            FOOTER=$(echo "$AI_TEXT" | grep -i "^FOOTER:" | head -1 | sed 's/.*FOOTER:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//' || echo "")
            
            # Clean up any remaining formatting issues
            if [[ -n "$TITLE" ]]; then
              # Remove any extra TITLE/DESC/FOOTER text that got mixed in
              TITLE=$(echo "$TITLE" | sed 's/DESC:.*$//' | sed 's/FOOTER:.*$//' | head -c 50)
            fi
            
            if [[ -n "$DESC_RAW" ]]; then
              # Remove any extra FOOTER text that got mixed in
              DESC_RAW=$(echo "$DESC_RAW" | sed 's/FOOTER:.*$//')
            fi
            
            # If no proper format found, try manual extraction
            if [[ -z "$TITLE" || -z "$DESC_RAW" ]]; then
              echo "⚠️ Structured format not found, attempting manual parsing..."
              
              # Try to find title with emoji at start of line
              TITLE=$(echo "$AI_TEXT" | grep -E "^[🌅🌆🌙🌜☀️]" | head -1 | sed 's/^[[:space:]]*//' || echo "")
              
              # Get the remaining text after title as description
              if [[ -n "$TITLE" ]]; then
                DESC_RAW=$(echo "$AI_TEXT" | grep -v -F "$TITLE" | grep -v "^FOOTER:" | head -1 | sed 's/^[[:space:]]*//' || echo "")
              fi
              
              # If still nothing, use the whole response as description with a default title
              if [[ -z "$TITLE" && -z "$DESC_RAW" ]]; then
                TITLE="🤖 AI Vibes Activated"
                DESC_RAW="$AI_TEXT"
              fi
            fi
            
            if [[ -n "$TITLE" && -n "$DESC_RAW" ]]; then
              echo "✅ Using AI generated content"
              echo "Parsed Title: $TITLE"
              echo "Parsed Desc: $DESC_RAW"
              echo "Parsed Footer: $FOOTER"
              USE_AI=true
            else
              echo "🔄 AI parsing failed, using fallback content"
              echo "Failed to parse - Title: '$TITLE', Desc: '$DESC_RAW'"
              USE_AI=false
            fi
          else
            echo "🎲 Using fallback content - no AI response"
            USE_AI=false
          fi
          
          # Validate and clean final variables
          if [[ "$USE_AI" == "true" ]]; then
            # Ensure title has emoji and clean it up
            if [[ ! "$TITLE" =~ ^[🌅🌆🌙🌜☀️] ]]; then
              echo "⚠️ Title missing emoji, adding default"
              case "$TYPE" in
                "morning") TITLE="🌅 $TITLE" ;;
                "afternoon") TITLE="☀️ $TITLE" ;;
                "evening") TITLE="🌆 $TITLE" ;;
                "night") TITLE="🌙 $TITLE" ;;
              esac
            fi
            
            # Clean up description - remove any stray TITLE/DESC/FOOTER text
            DESC_RAW=$(echo "$DESC_RAW" | sed 's/^TITLE:.*$//' | sed 's/^DESC:[[:space:]]*//' | sed 's/FOOTER:.*$//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
            
            # Set default footer if empty
            if [[ -z "$FOOTER" ]]; then
              FOOTER="ai vibes activated"
            fi
          fi
          
          # Fallback messages
          if [[ "$USE_AI" != "true" ]]; then
            case "$TYPE" in
              "morning")
                TITLE="🌅 Morning Vibes Loading"
                DESC_RAW="GM legends hope everyone slept well! Ready to grind today or masih ngantuk dikit? Either way let's warm up together cuyy"
                FOOTER="coffee loading..."
                ;;
              "afternoon")
                TITLE="☀️ Midday Check In"
                DESC_RAW="What's good crew hope lunch was solid! Time to touch grass a bit atau lanjut mabar nih? Just vibing here gais"
                FOOTER="recharge time"
                ;;
              "evening")
                if [[ "$DAY" == "5" ]]; then
                  TITLE="🌆 Weekend Loading Tonight"
                  DESC_RAW="Friday evening vibes fr weekend mode almost activated! Besok weekend udah mulai coyyy time to celebrate brodiee"
                elif [[ "$DAY" == "4" ]]; then
                  TITLE="🌆 Almost Weekend Energy"
                  DESC_RAW="Thursday evening energy lowkey excited, besok jumat weekend loading banget! Almost there fam just one more day"
                else
                  TITLE="🌆 Golden Hour Gang"
                  DESC_RAW="Evening check in how was the day brodiee? Golden hour hits different today, santai dulu before night activities gih"
                fi
                FOOTER="chill mode on"
                ;;
              "night")
                if [[ "$DAY" == "5" ]]; then
                  TITLE="🌙 Weekend Activated Tonight"
                  DESC_RAW="Friday night squad deym weekend officially starts! Besok weekend udah mulai coyyy time to celebrate properly brooo"
                elif [[ "$DAY" == "4" ]]; then
                  TITLE="🌙 Pre Weekend Vibes"
                  DESC_RAW="Thursday night energy besok jumat weekend loading banget! Almost there cuyy just gotta survive one more day fam"
                elif [[ "$DAY" == "6" ]]; then
                  TITLE="🌙 Saturday Night Live"
                  DESC_RAW="Saturday night vibes besok minggu masih weekend santuy! Perfect timing for late night gaming sessions dayumm"
                elif [[ "$CONTEXT" == "weekend" ]]; then
                  TITLE="🌙 Night Owls Territory"
                  DESC_RAW="Weekend night energy still going strong! Still grinding or udah gabut mode? Either way we vibing tonight gais"
                else
                  TITLE="🌜 Midnight Chronicles"
                  DESC_RAW="GN fam hope you had a solid day today! Time to rest up, besok respawn lagi cuy sweet dreams everyone"
                fi
                FOOTER="rest well"
                ;;
            esac
          fi
          
          # Add required ending to description
          DESC="$DESC_RAW\\n> by server dev - <@399393175904714752>"
          
          # Set colors and thumbnails
          case "$TYPE" in
            "morning") COLOR=16766720; THUMB="1f305" ;;
            "afternoon") COLOR=16763904; THUMB="2600" ;;
            "evening") COLOR=16744448; THUMB="1f307" ;;
            "night") COLOR=8947848; THUMB="1f319" ;;
          esac
          
          TIMESTAMP=$(TZ='Asia/Jakarta' date -u +%Y-%m-%dT%H:%M:%S.000Z)
          
          echo "📤 Sending to Discord..."
          echo "Final Title: $TITLE"
          echo "Final Desc: $DESC_RAW"
          echo "Final Footer: $FOOTER"
          
          # Clean variables for JSON (remove problematic characters)
          TITLE_CLEAN=$(echo "$TITLE" | tr -d '\n\r' | sed 's/"/\\"/g' | sed 's/TITLE://g' | sed 's/DESC:.*$//' | sed 's/FOOTER:.*$//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          DESC_CLEAN=$(echo "$DESC" | tr -d '\n\r' | sed 's/"/\\"/g' | sed 's/TITLE:.*$//' | sed 's/DESC://g' | sed 's/FOOTER:.*$//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          FOOTER_CLEAN=$(echo "$FOOTER" | tr -d '\n\r' | sed 's/"/\\"/g' | sed 's/FOOTER://g' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
          
          echo "Cleaned Title: $TITLE_CLEAN"
          echo "Cleaned Desc: $DESC_CLEAN"
          echo "Cleaned Footer: $FOOTER_CLEAN"
          
          # Send to Discord
          curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d '{"embeds":[{"title":"'"$TITLE_CLEAN"'","description":"'"$DESC_CLEAN"'","color":'"$COLOR"',"thumbnail":{"url":"https://twemoji.maxcdn.com/v/latest/72x72/'"$THUMB"'.png"},"footer":{"text":"'"$FOOTER_CLEAN"'","icon_url":"https://files.catbox.moe/npfh4e.jpg"},"timestamp":"'"$TIMESTAMP"'"}]}'
          
          echo "✅ Sent $TYPE greeting (AI: ${USE_AI:-false}, Context: $CONTEXT)"
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Send Random Sticker
        run: |
          echo "🎲 Selecting random sticker..."
          
          # Wait a bit before sending sticker (so it appears after greeting)
          sleep 3
          
          # Array of sticker URLs from your server
          # Try different Discord CDN formats for stickers
          STICKERS=(
            "https://media.discordapp.net/stickers/1404543938815197306.png"
            "https://media.discordapp.net/stickers/1405277985237368943.png"
            "https://media.discordapp.net/stickers/1405477154095104082.png"
            "https://media.discordapp.net/stickers/1405487683526201404.png"
            "https://media.discordapp.net/stickers/1405546781927936051.png"
            "https://media.discordapp.net/stickers/1405855503858274397.png"
            "https://media.discordapp.net/stickers/1405914196922597549.png"
            "https://media.discordapp.net/stickers/1406065324758929509.png"
            "https://media.discordapp.net/stickers/1406629592839491716.png"
            "https://media.discordapp.net/stickers/1406668584335184003.png"
            "https://media.discordapp.net/stickers/1407858067013369856.png"
            "https://media.discordapp.net/stickers/1407858350334677204.png"
            "https://media.discordapp.net/stickers/1407858765616779396.png"
            "https://media.discordapp.net/stickers/1407859373396590735.png"
          )
          
          # Pick random sticker
          RANDOM_INDEX=$((RANDOM % ${#STICKERS[@]}))
          SELECTED_STICKER=${STICKERS[$RANDOM_INDEX]}
          
          echo "🎯 Selected sticker: $SELECTED_STICKER"
          
          # Send sticker as a simple image message (not in embed)
          curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d "{\"content\":\"$SELECTED_STICKER\"}"
          
          echo "🎉 Random sticker sent!"
