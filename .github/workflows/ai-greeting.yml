name: AI Discord Greeting

on:
  schedule:
    - cron: '0 0 * * 1-5'    # 7 AM WIB weekdays (morning)
    - cron: '0 5 * * 1-5'    # 12 PM WIB weekdays (afternoon)
    - cron: '0 10 * * 1-5'   # 5 PM WIB weekdays (evening)
    - cron: '0 15 * * 1-5'   # 10 PM WIB weekdays (night)
    - cron: '0 0 * * 6,0'    # 7 AM WIB weekends (morning)
    - cron: '0 5 * * 6,0'    # 12 PM WIB weekends (afternoon)
    - cron: '0 10 * * 6,0'   # 5 PM WIB weekends (evening)
    - cron: '0 15 * * 6,0'   # 10 PM WIB weekends (night)
  workflow_dispatch:
    inputs:
      greeting_type:
        description: 'Select greeting type'
        required: true
        default: 'morning'
        type: choice
        options: [morning, afternoon, evening, night]

jobs:
  send-greeting:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Generate and Send AI Greeting
        run: |
          # Determine greeting type and context
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TYPE="${{ github.event.inputs.greeting_type }}"
          else
            case "${{ github.event.schedule }}" in
              "0 0 * * 1-5"|"0 0 * * 6,0") TYPE="morning" ;;
              "0 5 * * 1-5"|"0 5 * * 6,0") TYPE="afternoon" ;;
              "0 10 * * 1-5"|"0 10 * * 6,0") TYPE="evening" ;;
              "0 15 * * 1-5"|"0 15 * * 6,0") TYPE="night" ;;
            esac
          fi
          
          DAY=$(date +%u)
          if [[ $DAY -eq 6 || $DAY -eq 7 ]]; then
            CONTEXT="weekend"
          else
            CONTEXT="weekday"
          fi
          
          echo "🤖 Generating $TYPE greeting for $CONTEXT"
          
          # Create simple prompt without problematic characters
          cat > /tmp/prompt.txt << 'EOF'
          Create a casual Discord greeting for TIME_HERE on CONTEXT_HERE.
          
          Requirements:
          - Start with English, end with Indonesian - must flow naturally
          - Mix slang: brodie, fr, lowkey, anjir, dikit, gabut, cuy
          - Gaming terms: mmr, noob, mabar, touching grass
          - Keep it SHORT and conversational (max 2 lines)
          - International Discord server vibe
          
          Good examples:
          Morning legends! Ready to grind? Atau masih ngantuk dikit?
          What's good afternoon crew! Time to touch grass atau lanjut mabar?
          Evening vibes hitting different today, santai dulu gih
          
          Format:
          TITLE: [casual title with emoji]
          DESC: [short natural flow English-Indonesian mix]
          FOOTER: [short footer]
          
          Keep it natural and short!
          EOF
          
          # Replace placeholders
          sed -i "s/TIME_HERE/$TYPE/g" /tmp/prompt.txt
          sed -i "s/CONTEXT_HERE/$CONTEXT/g" /tmp/prompt.txt
          
          # Try Gemini API
          echo "🔄 Calling Gemini API..."
          
          # Create JSON payload safely
          python3 << 'PYTHON_EOF'
          import json
          import requests
          import os
          import sys
          
          # Read prompt
          with open('/tmp/prompt.txt', 'r') as f:
              prompt = f.read().strip()
          
          # Prepare request
          api_key = os.environ.get('GEMINI_API_KEY')
          if not api_key:
              print("❌ No API key found")
              sys.exit(1)
          
          url = f"https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key={api_key}"
          
          payload = {
              "contents": [{"parts": [{"text": prompt}]}],
              "generationConfig": {
                  "temperature": 0.8,
                  "maxOutputTokens": 300
              }
          }
          
          try:
              response = requests.post(url, json=payload, timeout=30)
              
              if response.status_code == 200:
                  data = response.json()
                  if 'candidates' in data and len(data['candidates']) > 0:
                      ai_text = data['candidates'][0]['content']['parts'][0]['text']
                      print("✅ AI response received")
                      with open('/tmp/ai_response.txt', 'w') as f:
                          f.write(ai_text)
                  else:
                      print("❌ No candidates in response")
                      with open('/tmp/ai_response.txt', 'w') as f:
                          f.write("")
              else:
                  print(f"❌ API error: {response.status_code}")
                  print(f"Response: {response.text}")
                  with open('/tmp/ai_response.txt', 'w') as f:
                      f.write("")
                      
          except Exception as e:
              print(f"❌ Request failed: {e}")
              with open('/tmp/ai_response.txt', 'w') as f:
                  f.write("")
          PYTHON_EOF
          
          # Parse AI response or use fallback
          if [[ -s /tmp/ai_response.txt ]]; then
            AI_TEXT=$(cat /tmp/ai_response.txt)
            echo "AI response preview: $(echo "$AI_TEXT" | head -c 100)..."
            
            # Extract parts
            TITLE=$(echo "$AI_TEXT" | grep -i "TITLE:" | head -1 | sed 's/.*TITLE:[[:space:]]*//' || echo "")
            DESC_RAW=$(echo "$AI_TEXT" | grep -i "DESC:" | head -1 | sed 's/.*DESC:[[:space:]]*//' || echo "")
            FOOTER=$(echo "$AI_TEXT" | grep -i "FOOTER:" | head -1 | sed 's/.*FOOTER:[[:space:]]*//' || echo "")
            
            if [[ -n "$TITLE" && -n "$DESC_RAW" ]]; then
              echo "✅ Using AI generated content"
              USE_AI=true
            else
              echo "🔄 AI format not recognized, using AI text as description"
              TITLE="🤖 ai vibes activated"
              DESC_RAW="$AI_TEXT"
              FOOTER="generated with love"
              USE_AI=true
            fi
          else
            echo "🎲 Using fallback content"
            USE_AI=false
          fi
          
          # Fallback messages
          if [[ "$USE_AI" != "true" ]]; then
            case "$TYPE" in
              "morning")
                TITLE="🌅 Morning Check"
                DESC_RAW="GM legends! Ready to grind today? Atau masih ngantuk dikit?"
                FOOTER="coffee loading..."
                ;;
              "afternoon")
                TITLE="☀️ Afternoon Vibes"
                DESC_RAW="What's good crew! Time to touch grass atau lanjut mabar nih?"
                FOOTER="recharge time"
                ;;
              "evening")
                TITLE="🌆 Evening Squad"
                DESC_RAW="How we doing tonight? Golden hour hits different, santai dulu gih"
                FOOTER="chill mode on"
                ;;
              "night")
                if [[ "$CONTEXT" == "weekend" ]]; then
                  TITLE="🌙 Late Night Gang"
                  DESC_RAW="Weekend night energy! Still grinding or udah gabut mode?"
                  FOOTER="weekend vibes"
                else
                  TITLE="🌜 Night Shift"
                  DESC_RAW="GN fam! Hope you had a good day, besok respawn lagi cuy"
                  FOOTER="rest well"
                fi
                ;;
            esac
          fi
          
          # Add required ending to description
          DESC="$DESC_RAW\\n> by server dev - <@399393175904714752>"
          
          # Set colors and thumbnails
          case "$TYPE" in
            "morning") COLOR=16766720; THUMB="1f305" ;;
            "afternoon") COLOR=16763904; THUMB="2600" ;;
            "evening") COLOR=16744448; THUMB="1f307" ;;
            "night") COLOR=8947848; THUMB="1f319" ;;
          esac
          
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.000Z)
          
          echo "📤 Sending to Discord..."
          echo "Title: $TITLE"
          echo "Footer: $FOOTER"
          
          # Send to Discord
          curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d "{\"embeds\":[{\"title\":\"$TITLE\",\"description\":\"$DESC\",\"color\":$COLOR,\"thumbnail\":{\"url\":\"https://twemoji.maxcdn.com/v/latest/72x72/$THUMB.png\"},\"footer\":{\"text\":\"$FOOTER\",\"icon_url\":\"https://files.catbox.moe/npfh4e.jpg\"},\"timestamp\":\"$TIMESTAMP\"}]}"
          
          echo "✅ Sent $TYPE greeting (AI: ${USE_AI:-false}, Context: $CONTEXT)"
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Send Random Sticker
        run: |
          echo "🎲 Selecting random sticker..."
          
          # Wait a bit before sending sticker (so it appears after greeting)
          sleep 3
          
          # Array of sticker URLs from your server
          # You need to replace these with actual sticker URLs from your Discord server
          STICKERS=(
            "https://cdn.discordapp.com/emojis/1404543938815197306.png"
            "https://cdn.discordapp.com/emojis/1405277985237368943.png"
            "https://cdn.discordapp.com/emojis/1405477154095104082.png"
            "https://cdn.discordapp.com/emojis/1405487683526201404.png"
            "https://cdn.discordapp.com/emojis/1405546781927936051.png"
            "https://cdn.discordapp.com/emojis/1405855503858274397.png"
            "https://cdn.discordapp.com/emojis/1405914196922597549.png"
            "https://cdn.discordapp.com/emojis/1406065324758929509.png"
            "https://cdn.discordapp.com/emojis/1406629592839491716.png"
            "https://cdn.discordapp.com/emojis/1406668584335184003.png"
            "https://cdn.discordapp.com/emojis/1407858067013369856.png"
            "https://cdn.discordapp.com/emojis/1407858350334677204.png"
            "https://cdn.discordapp.com/emojis/1407858765616779396.png"
            "https://cdn.discordapp.com/emojis/1407859373396590735.png"
          )
          
          # Pick random sticker
          RANDOM_INDEX=$((RANDOM % ${#STICKERS[@]}))
          SELECTED_STICKER=${STICKERS[$RANDOM_INDEX]}
          
          echo "🎯 Selected sticker: $SELECTED_STICKER"
          
          # Send sticker as image embed
          curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d "{\"embeds\":[{\"image\":{\"url\":\"$SELECTED_STICKER\"}}]}"
          
          echo "🎉 Random sticker sent!"
