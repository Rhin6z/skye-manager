name: gemini ai discord greeting

on:
  schedule:
    - cron: '0 0 * * 1-5'    # 7 AM WIB weekdays
    - cron: '0 5 * * 1-5'    # 12 PM WIB weekdays  
    - cron: '0 10 * * 1-5'   # 5 PM WIB weekdays
    - cron: '0 15 * * 1-5'   # 10 PM WIB weekdays
    - cron: '0 0 * * 6,0'    # 7 AM WIB weekends
    - cron: '0 5 * * 6,0'    # 12 PM WIB weekends
    - cron: '0 10 * * 6,0'   # 5 PM WIB weekends
    - cron: '0 15 * * 6,0'   # 10 PM WIB weekends
  workflow_dispatch:
    inputs:
      greeting_type:
        description: 'select greeting type'
        required: true
        default: 'morning'
        type: choice
        options: [morning, afternoon, evening, night]

jobs:
  send-greeting:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Send Gemini AI Greeting
        run: |
          set -e
          
          # Determine greeting type
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TYPE="${{ github.event.inputs.greeting_type }}"
          else
            case "${{ github.event.schedule }}" in
              "0 0 * * 1-5"|"0 0 * * 6,0") TYPE="morning" ;;
              "0 5 * * 1-5"|"0 5 * * 6,0") TYPE="afternoon" ;;
              "0 10 * * 1-5"|"0 10 * * 6,0") TYPE="evening" ;;
              "0 15 * * 1-5"|"0 15 * * 6,0") TYPE="night" ;;
            esac
          fi
          
          # Check if weekend
          DAY=$(date +%u)
          if [[ $DAY -eq 6 || $DAY -eq 7 ]]; then
            CONTEXT="weekend"
          else
            CONTEXT="weekday"
          fi
          
          echo "🤖 generating greeting: $TYPE ($CONTEXT)"
          
          # English-Indo mixed slang prompt (updated for lowercase output)
          read -r -d '' PROMPT << 'EOF' || true
          create a discord greeting for TYPE_PLACEHOLDER time on CONTEXT_PLACEHOLDER day.

          style requirements:
          - mix english and indonesian naturally 
          - heavy slang usage: "yoww", "bruh", "bestie", "periodt", "slay", "vibe check", "no cap", "fr fr", "lowkey", "highkey"
          - indo slang: "anying", "kocak", "woy", "cuy", "gas", "santuy"
          - gaming terms: "npc behavior", "main character energy", "respawn", "afk", "touching grass"
          - gen z vibes but not cringe
          - IMPORTANT: output everything in lowercase except emojis

          format output:
          title: [title with emoji - mix eng/indo]
          desc: [2-3 sentences, natural code-switching]
          > by server dev - <@399393175904714752>
          footer: [short footer]

          example tone:
          "yoww gd morning bestie! how's your dream? hope it's not npc behavior dreams fr 😴 time to touch some grass or touch some rank, your choice periodt"

          make it sound natural, like how indonesian gen z actually talks online. remember: all lowercase except emojis!
          EOF
          
          # Replace placeholders
          PROMPT=${PROMPT//TYPE_PLACEHOLDER/$TYPE}
          PROMPT=${PROMPT//CONTEXT_PLACEHOLDER/$CONTEXT}
          
          # Try Gemini API with updated model (with proper error handling)
          GEMINI_RESPONSE=""
          echo "🔄 trying gemini-2.5-flash-lite api..."
          
          if curl -f -s -X POST \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"contents\": [{
                \"parts\": [{\"text\": \"$PROMPT\"}]
              }],
              \"generationConfig\": {
                \"temperature\": 0.9,
                \"maxOutputTokens\": 300,
                \"topP\": 0.8,
                \"topK\": 40
              },
              \"safetySettings\": [
                {\"category\": \"HARM_CATEGORY_HARASSMENT\", \"threshold\": \"BLOCK_NONE\"},
                {\"category\": \"HARM_CATEGORY_HATE_SPEECH\", \"threshold\": \"BLOCK_NONE\"},
                {\"category\": \"HARM_CATEGORY_SEXUALLY_EXPLICIT\", \"threshold\": \"BLOCK_NONE\"},
                {\"category\": \"HARM_CATEGORY_DANGEROUS_CONTENT\", \"threshold\": \"BLOCK_NONE\"}
              ]
            }" \
            --connect-timeout 15 --max-time 30 > /tmp/gemini_response.json 2>/dev/null; then
            
            # Parse response with better error handling
            if AI_TEXT=$(jq -r '.candidates[0].content.parts[0].text // empty' /tmp/gemini_response.json 2>/dev/null) && [[ -n "$AI_TEXT" ]]; then
              echo "✅ gemini api success"
              echo "$AI_TEXT" > /tmp/ai_content.txt
              
              # Convert to lowercase (except emojis)
              AI_TEXT_LOWER=$(echo "$AI_TEXT" | sed 's/\([^[:space:]]*[[:alpha:]]\)/\L\1/g')
              
              # Extract parts with improved parsing
              TITLE=$(echo "$AI_TEXT_LOWER" | grep -i "title:" | head -1 | sed 's/.*title:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
              FOOTER=$(echo "$AI_TEXT_LOWER" | grep -i "footer:" | head -1 | sed 's/.*footer:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
              
              # Get DESC (everything between title and "> by server dev" or footer)
              DESC=$(echo "$AI_TEXT_LOWER" | sed -n '/title:/,/> by server dev\|footer:/p' | grep -v "title:" | grep -v "footer:" | sed '/> by server dev/d' | tr '\n' ' ' | sed 's/desc:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
              
              # Add the required ending if DESC exists
              if [[ -n "$DESC" ]]; then
                DESC="$DESC\\n> by server dev - <@399393175904714752>"
              fi
              
              # Validate all components exist
              if [[ -n "$TITLE" && -n "$DESC" && -n "$FOOTER" ]]; then
                echo "✅ parsing successful"
                echo "title: $TITLE"
                echo "desc: $DESC"
                echo "footer: $FOOTER"
                USE_AI=true
              else
                echo "❌ parsing failed - missing components"
                echo "title present: $([[ -n "$TITLE" ]] && echo "yes" || echo "no")"
                echo "desc present: $([[ -n "$DESC" ]] && echo "yes" || echo "no")"
                echo "footer present: $([[ -n "$FOOTER" ]] && echo "yes" || echo "no")"
                USE_AI=false
              fi
            else
              echo "❌ json parsing failed or empty response"
              # Check if there's an error in the response
              if [[ -f /tmp/gemini_response.json ]]; then
                ERROR_MSG=$(jq -r '.error.message // "unknown error"' /tmp/gemini_response.json 2>/dev/null)
                echo "error details: $ERROR_MSG"
              fi
              USE_AI=false
            fi
          else
            echo "❌ gemini api call failed"
            HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
              "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
              -H "Content-Type: application/json" \
              -d '{"contents":[{"parts":[{"text":"test"}]}]}' \
              --connect-timeout 5 --max-time 10 2>/dev/null || echo "000")
            echo "http status code: $HTTP_CODE"
            USE_AI=false
          fi
          
          # Fallback messages if AI fails (now in lowercase)
          if [[ "$USE_AI" != "true" ]]; then
            echo "🎲 using fallback greeting"
            INDEX=$((RANDOM % 3))
            
            case "$TYPE-$INDEX" in
              "morning-0")
                TITLE="🌄 yoww gd morning bestie"
                DESC="how's your dream? hope it's not npc behavior dreams fr 😴 time to touch grass or touch rank periodt\\n> by server dev - <@399393175904714752>"
                FOOTER="main character energy"
                ;;
              "morning-1")
                TITLE="🌅 morning vibe check bestie"
                DESC="yoww what's the tea? coffee first then we slay the day no cap ☕ don't be giving dead energy anying\\n> by server dev - <@399393175904714752>"
                FOOTER="periodt bestie"
                ;;
              "morning-2")
                TITLE="☀️ rise n grind but make it chill"
                DESC="gm squad! lowkey today feels like a w waiting to happen fr 😌 just don't afk your own life kocak\\n> by server dev - <@399393175904714752>"
                FOOTER="slay responsibly"
                ;;
              "afternoon-0")
                TITLE="🌞 lunch break or mental break?"
                DESC="yoww bestie! your stomach said what now? 🍔 can't be running on vibes only anying, eat something fr\\n> by server dev - <@399393175904714752>"
                FOOTER="feed the main character"
                ;;
              "afternoon-1")
                TITLE="🍛 midday energy check"
                DESC="bruh if you're feeling like an npc rn that's valid 😴 grab some food and respawn your energy periodt\\n> by server dev - <@399393175904714752>"
                FOOTER="recharge era"
                ;;
              "afternoon-2")
                TITLE="😎 afternoon tea (or drama?)"
                DESC="yo what's good? hydrate or die-drate bestie 🥤 save the salty energy for ranked games kocak\\n> by server dev - <@399393175904714752>"
                FOOTER="stay hydrated queen"
                ;;
              "evening-0")
                TITLE="🌆 golden hour but make it cozy"
                DESC="yoww evening squad! sunset hits different when you're not tilted fr 😂 time to wind down bestie\\n> by server dev - <@399393175904714752>"
                FOOTER="chill vibes only"
                ;;
              "evening-1")
                TITLE="🌅 it's giving evening main character"
                DESC="what's the move tonight? snack, chill playlist, maybe some games anying 🎧 lowkey perfect timing\\n> by server dev - <@399393175904714752>"
                FOOTER="tonight's agenda"
                ;;
              "evening-2")
                TITLE="✨ evening bestie check-in"
                DESC="bruh today was a whole movie huh? 😌 but we survived and that's periodt, no cap\\n> by server dev - <@399393175904714752>"
                FOOTER="we been through it"
                ;;
              "night-0")
                TITLE="🌙 bedtime or grindtime?"
                DESC="yoww night owls! even your phone needs to charge bestie ⚡ maybe touch some pillows instead of screens kocak\\n> by server dev - <@399393175904714752>"
                FOOTER="sleep is self care"
                ;;
              "night-1")
                TITLE="💤 it's giving sleepy girl era"
                DESC="gn bestie! don't bring today's drama to tomorrow's energy fr 😪 reset and respawn tomorrow periodt\\n> by server dev - <@399393175904714752>"
                FOOTER="dream of ws"
                ;;
              "night-2")
                TITLE="🌜 night night main character"
                DESC="bruh tomorrow's gonna be another episode anying, get some rest so you can slay properly no cap\\n> by server dev - <@399393175904714752>"
                FOOTER="see u in the morning"
                ;;
            esac
          fi
          
          # Set colors and thumbnails
          case "$TYPE" in
            "morning") COLOR=16766720; THUMB="1f305" ;;
            "afternoon") COLOR=16763904; THUMB="2600" ;;
            "evening") COLOR=16744448; THUMB="1f307" ;;
            "night") COLOR=8947848; THUMB="1f319" ;;
          esac
          
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.000Z)
          
          # Send to Discord with better error handling
          echo "📤 sending to discord..."
          if curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d "{\"embeds\":[{\"title\":\"$TITLE\",\"description\":\"$DESC\",\"color\":$COLOR,\"thumbnail\":{\"url\":\"https://twemoji.maxcdn.com/v/latest/72x72/$THUMB.png\"},\"footer\":{\"text\":\"$FOOTER\",\"icon_url\":\"https://files.catbox.moe/npfh4e.jpg\"},\"timestamp\":\"$TIMESTAMP\"}]}" > /tmp/discord_response.txt 2>&1; then
            echo "✅ sent $TYPE greeting (ai: ${USE_AI:-false}, context: $CONTEXT)"
          else
            echo "❌ discord webhook failed"
            cat /tmp/discord_response.txt 2>/dev/null || echo "no response details available"
          fi
          
          # Cleanup
          rm -f /tmp/gemini_response.json /tmp/ai_content.txt /tmp/discord_response.txt