name: gemini ai discord greeting

on:
  schedule:
    - cron: '0 0 * * 1-5'    # 7 AM WIB weekdays
    - cron: '0 5 * * 1-5'    # 12 PM WIB weekdays  
    - cron: '0 10 * * 1-5'   # 5 PM WIB weekdays
    - cron: '0 15 * * 1-5'   # 10 PM WIB weekdays
    - cron: '0 0 * * 6,0'    # 7 AM WIB weekends
    - cron: '0 5 * * 6,0'    # 12 PM WIB weekends
    - cron: '0 10 * * 6,0'   # 5 PM WIB weekends
    - cron: '0 15 * * 6,0'   # 10 PM WIB weekends
  workflow_dispatch:
    inputs:
      greeting_type:
        description: 'select greeting type'
        required: true
        default: 'morning'
        type: choice
        options: [morning, afternoon, evening, night]

jobs:
  send-greeting:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Send Gemini AI Greeting
        run: |
          set -e
          
          # Determine greeting type
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TYPE="${{ github.event.inputs.greeting_type }}"
          else
            case "${{ github.event.schedule }}" in
              "0 0 * * 1-5"|"0 0 * * 6,0") TYPE="morning" ;;
              "0 5 * * 1-5"|"0 5 * * 6,0") TYPE="afternoon" ;;
              "0 10 * * 1-5"|"0 10 * * 6,0") TYPE="evening" ;;
              "0 15 * * 1-5"|"0 15 * * 6,0") TYPE="night" ;;
            esac
          fi
          
          # Check if weekend
          DAY=$(date +%u)
          if [[ $DAY -eq 6 || $DAY -eq 7 ]]; then
            CONTEXT="weekend"
          else
            CONTEXT="weekday"  
          fi
          
          echo "ü§ñ Generating greeting: $TYPE ($CONTEXT)"
          
          # Create simple prompt
          PROMPT="Buatkan greeting Discord untuk waktu $TYPE hari $CONTEXT.

          Style: Mix English-Indonesian slang yang natural dan flow
          - English slang: yo, what's good, fr, no cap, lowkey, bet, periodt
          - Indo slang: woy, anjir, kocak, gas, santuy, gabut, anying  
          - Gaming terms: mabar, rank, noob, gg, afk
          
          Format output:
          TITLE: [judul dengan emoji, mix eng-indo]
          DESC: [1-2 kalimat natural yang flow]
          > by server dev - <@399393175904714752>
          FOOTER: [footer pendek]
          
          Contoh natural flow:
          yo what's good fam! malem weekend nih perfect buat mabar, jangan pada afk terus anjir üòÇ"
          
          # Try Gemini API
          echo "üîÑ Calling Gemini API..."
          
          if RESPONSE=$(curl -s -f -X POST \
            "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-lite:generateContent?key=${{ secrets.GEMINI_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d "{
              \"contents\": [{
                \"parts\": [{\"text\": \"$PROMPT\"}]
              }],
              \"generationConfig\": {
                \"temperature\": 0.8,
                \"maxOutputTokens\": 200
              }
            }" 2>/dev/null); then
            
            echo "‚úÖ Gemini API response received"
            
            # Extract AI text
            if AI_TEXT=$(echo "$RESPONSE" | jq -r '.candidates[0].content.parts[0].text' 2>/dev/null); then
              echo "‚úÖ AI text extracted successfully"
              
              # Parse title
              TITLE=$(echo "$AI_TEXT" | grep -i "TITLE:" | head -1 | sed 's/.*TITLE:[[:space:]]*//')
              
              # Parse footer  
              FOOTER=$(echo "$AI_TEXT" | grep -i "FOOTER:" | head -1 | sed 's/.*FOOTER:[[:space:]]*//')
              
              # Parse description (between TITLE and > by server dev)
              DESC=$(echo "$AI_TEXT" | sed -n '/TITLE:/,/> by server dev/p' | grep -v "TITLE:" | grep -v "FOOTER:" | sed '/> by server dev/d' | tr '\n' ' ' | sed 's/DESC:[[:space:]]*//' | sed 's/^[[:space:]]*//' | sed 's/[[:space:]]*$//')
              
              # Add required ending to DESC
              if [[ -n "$DESC" ]]; then
                DESC="$DESC\\n> by server dev - <@399393175904714752>"
              fi
              
              # Validate all parts exist
              if [[ -n "$TITLE" && -n "$DESC" && -n "$FOOTER" ]]; then
                echo "‚úÖ AI content parsed successfully"
                echo "Title: $TITLE"
                echo "Footer: $FOOTER" 
                USE_AI=true
              else
                echo "‚ùå AI parsing failed - missing parts"
                USE_AI=false
              fi
            else
              echo "‚ùå Failed to extract AI text from response"
              USE_AI=false
            fi
          else
            echo "‚ùå Gemini API call failed"
            USE_AI=false
          fi
          
          # Use fallback if AI failed
          if [[ "$USE_AI" != "true" ]]; then
            echo "üé≤ Using fallback greeting"
            
            # Simple fallback based on type and context
            if [[ "$TYPE" == "morning" ]]; then
              TITLE="üåÑ good morning squad, pagi gas"
              DESC="yo what's good fam! pagi $CONTEXT nih perfect buat start fresh, jangan jadi NPC terus anjir üòÇ\\n> by server dev - <@399393175904714752>"
              FOOTER="morning vibes activated"
            elif [[ "$TYPE" == "afternoon" ]]; then
              TITLE="üåû lunch break time, siang chill"  
              DESC="what's poppin legends? makan siang $CONTEXT itu buff utama, jangan skip terus jadi hangry kocak üçî\\n> by server dev - <@399393175904714752>"
              FOOTER="fuel up time"
            elif [[ "$TYPE" == "evening" ]]; then
              TITLE="üåÜ golden hour vibes, sore santai"
              DESC="yo evening squad! sunset $CONTEXT hits different, playlist chill terus lanjut mabar anjir ‚ú®\\n> by server dev - <@399393175904714752>"
              FOOTER="chill evening energy"
            else # night
              if [[ "$CONTEXT" == "weekend" ]]; then
                TITLE="üåô late night squad, malem weekend"
                DESC="yo what's good night owls! weekend night perfect buat mabar, jangan pada tidur dulu anjir ‚ö°\\n> by server dev - <@399393175904714752>"
                FOOTER="weekend night energy"
              else
                TITLE="üåú bedtime soon, malem weekday"
                DESC="gn fam! weekday night means rest time, tapi sebelumnya satu game dulu kocak üò¥\\n> by server dev - <@399393175904714752>"
                FOOTER="rest well squad"
              fi
            fi
          fi
          
          # Set colors and thumbnails
          case "$TYPE" in
            "morning") COLOR=16766720; THUMB="1f305" ;;
            "afternoon") COLOR=16763904; THUMB="2600" ;;  
            "evening") COLOR=16744448; THUMB="1f307" ;;
            "night") COLOR=8947848; THUMB="1f319" ;;
          esac
          
          # Get timestamp
          TIMESTAMP=$(date -u +%Y-%m-%dT%H:%M:%S.000Z)
          
          # Send to Discord
          echo "üì§ Sending to Discord..."
          
          if curl -f -X POST "${{ secrets.DISCORD_WEBHOOK_URL }}" \
               -H "Content-Type: application/json" \
               --connect-timeout 10 --max-time 15 \
               -d "{\"embeds\":[{\"title\":\"$TITLE\",\"description\":\"$DESC\",\"color\":$COLOR,\"thumbnail\":{\"url\":\"https://twemoji.maxcdn.com/v/latest/72x72/$THUMB.png\"},\"footer\":{\"text\":\"$FOOTER\",\"icon_url\":\"https://files.catbox.moe/npfh4e.jpg\"},\"timestamp\":\"$TIMESTAMP\"}]}"; then
            echo "‚úÖ Successfully sent $TYPE greeting (AI: ${USE_AI:-false}, Context: $CONTEXT)"
          else
            echo "‚ùå Failed to send Discord message"
            exit 1
          fi
